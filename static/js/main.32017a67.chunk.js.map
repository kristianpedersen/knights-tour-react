{"version":3,"sources":["components/About.js","components/Animation.js","Calculate.js","components/Cell.js","components/Board.js","components/Input.js","components/Nav.js","App.js","reportWebVitals.js","index.js"],"names":["styled","div","About","pause","ms","Promise","resolve","setTimeout","Animation","animationSpeedRef","board","initialRender","useRef","useEffect","current","console","log","window","addEventListener","newBoardHeight","document","querySelector","getBoundingClientRect","height","querySelectorAll","forEach","svg","setAttribute","boardDimensions","boardWidth","width","boardHeight","length","buttons","a","entries","index","move","ns","createElementNS","button","find","b","innerHTML","name","pathString","setAttributeNS","blackLine","coloredLine","hue","Math","floor","undefined","left","top","x","y","abs","previousButton","previousClientRect","previous","previousX","previousY","appendChild","style","position","bottom","classList","add","borderColor","backgroundColor","color","remove","colorizeButtons","Calculate","startX","startY","boardSize","numberOfCells","Array","map","_","cellX","cellY","validMoves","colName","getValidMoves","getValidMovesLength","rewind","history","playback","push","colorize","visited","shift","getValidCellsFromBoard","sort","next","goBackInHistory","flat","filter","otherCell","xDistance","yDistance","i","pop","Cell","SingleCell","setBoard","setHistory","className","onClick","btn","removeAttribute","BoardContainer","Board","row","letter","key","uuidv4","cell","Form","form","props","BoardSizeInput","input","Slider","Input","setBoardSize","resetButton","setResetButton","animationSpeedP","boardSizeAndSpeed","event","size","speed","preventDefault","getTimeString","totalMilliseconds","totalSeconds","minutes","seconds","String","padStart","round","toFixed","htmlFor","autoFocus","id","min","max","onChange","target","value","n","Number","e","focus","type","onInput","output","step","ref","Nav","nav","Menu","title","exact","to","App","useState","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.32017a67.chunk.js","sourcesContent":["import { useEffect } from \"react\"\nimport styled from \"styled-components\"\n\nconst AboutDiv = styled.div`\n\ttext-align: left;\n\tdisplay: flex;\n\tflex-direction: column;\n\tjustify-content: center;\n\talign-items: center;\n\tpadding-left: 30px;\n\th1 {\n\t\tpadding: 1rem 0;\n\t}\n\n\tli {\n\t\tmargin: 1rem 0;\n\t}\n`\n\nfunction About() {\n\tuseEffect(function removeSVG() {\n\t\tdocument.querySelectorAll(\"svg\").forEach(svg => svg.remove())\n\t}, [])\n\n\treturn (\n\t\t<AboutDiv>\n\t\t\t<h1>About the algorithm</h1>\n\t\t\t<ul>\n\t\t\t\t<li>The knight can only move to a position where xDistance=1 and yDistance=2, or vice versa.</li>\n\t\t\t\t<li>For each move, we find all valid moves, and choose the one that has the fewest possibilities. This is known as Warnsdorff's rule.</li>\n\t\t\t\t<li>This was just a personal challenge for me, so I haven't looked at other implementations. I will happily accept corrections! :)</li>\n\t\t\t</ul>\n\t\t</AboutDiv>\n\n\t\t// \tFetch images from Wikipedia article\n\t\t// https://en.wikipedia.org/w/api.php?action=opensearch&limit=5&format=xml&search=knights%20tour&namespace=0\n\t\t// ...\n\t)\n}\n\nexport default About","import { useEffect, useRef } from \"react\"\n\nfunction pause(ms) {\n\treturn new Promise(resolve => setTimeout(resolve, ms))\n}\n\nfunction Animation({ animationSpeedRef, board }) {\n\tconst initialRender = useRef(true)\n\n\tuseEffect(function resizeSVGOnWindowResize() {\n\t\tif (initialRender.current) {\n\t\t\tinitialRender.current = false\n\t\t\tconsole.log(\"Setting up event listener\")\n\t\t\twindow.addEventListener(\"resize\", function handleResize() {\n\t\t\t\tconst newBoardHeight = document.querySelector(\".board\").getBoundingClientRect().height\n\t\t\t\tdocument.querySelectorAll(\"svg\").forEach(svg => svg.setAttribute(\"height\", newBoardHeight))\n\t\t\t})\n\t\t}\n\t})\n\n\tuseEffect(function animateBoardOnStateChange() {\n\t\tconst boardDimensions = document.querySelector(\".board\").getBoundingClientRect()\n\t\tconst boardWidth = boardDimensions.width\n\t\tconst boardHeight = boardDimensions.height\n\n\t\tif (board.length >= 25) {\n\t\t\tconst buttons = [...document.querySelectorAll(\".board-button\")]\n\t\t\tdocument.querySelectorAll(\"svg\").forEach(svg => svg.remove())\n\t\t\tasync function colorizeButtons() {\n\t\t\t\tfor (const [index, move] of board.entries()) {\n\t\t\t\t\t// Initialize svg\n\t\t\t\t\tconst ns = \"http://www.w3.org/2000/svg\"\n\t\t\t\t\tconst svg = document.createElementNS(ns, 'svg')\n\t\t\t\t\tsvg.setAttribute(\"preserveAspectRatio\", \"none\")\n\t\t\t\t\tsvg.setAttribute(\"viewBox\", `0 0 ${boardWidth} ${boardHeight}`)\n\n\t\t\t\t\tconst button = buttons.find(function getCurrentButton(b) {\n\t\t\t\t\t\treturn b.innerHTML === move.name\n\t\t\t\t\t})\n\t\t\t\t\tlet pathString = \"\"\n\t\t\t\t\tsvg.setAttributeNS(null, 'width', '100vw')\n\t\t\t\t\tsvg.setAttributeNS(null, 'height', document.querySelector(\".board\").getBoundingClientRect().height)\n\t\t\t\t\tconst blackLine = document.createElementNS(ns, \"path\")\n\t\t\t\t\tconst coloredLine = document.createElementNS(ns, \"path\")\n\n\t\t\t\t\tconst hue = Math.floor(index * (270 / board.length))\n\t\t\t\t\tif (button === undefined) {\n\t\t\t\t\t\treturn\n\t\t\t\t\t}\n\t\t\t\t\tconst { left, width, top, height } = button.getBoundingClientRect()\n\n\t\t\t\t\tif (index > 0 && button !== undefined) {\n\t\t\t\t\t\tconst x = left + width / 2\n\t\t\t\t\t\tconst y = Math.abs(top - document.querySelector(\".board\").getBoundingClientRect().top + height / 2)\n\t\t\t\t\t\tconst previousButton = buttons.find(b => b.innerHTML === board[index - 1].name)\n\t\t\t\t\t\tpreviousButton.innerHTML = index\n\n\t\t\t\t\t\tconst previousClientRect = previousButton.getBoundingClientRect()\n\t\t\t\t\t\tconst previous = {\n\t\t\t\t\t\t\tleft: previousClientRect.left,\n\t\t\t\t\t\t\twidth: previousClientRect.width,\n\t\t\t\t\t\t\ttop: previousClientRect.top,\n\t\t\t\t\t\t\theight: previousClientRect.height,\n\t\t\t\t\t\t}\n\t\t\t\t\t\tconst previousX = previous.left + width / 2\n\t\t\t\t\t\tconst previousY = Math.abs(previous.top - document.querySelector(\".board\").getBoundingClientRect().top + height / 2)\n\n\t\t\t\t\t\tpathString += `M ${x} ${y} L ${previousX} ${previousY}`\n\n\t\t\t\t\t\tblackLine.setAttributeNS(null, \"d\", pathString);\n\t\t\t\t\t\tblackLine.setAttributeNS(null, 'stroke', \"black\")\n\t\t\t\t\t\tblackLine.setAttributeNS(null, 'stroke-width', \"4\")\n\t\t\t\t\t\tblackLine.setAttributeNS(null, 'stroke-opacity', 0.1)\n\n\t\t\t\t\t\tcoloredLine.setAttributeNS(null, \"d\", pathString);\n\t\t\t\t\t\tcoloredLine.setAttributeNS(null, 'stroke', `hsl(${hue}, 100%, 50%)`)\n\t\t\t\t\t\tcoloredLine.setAttributeNS(null, 'stroke-width', \"2\")\n\n\t\t\t\t\t\tsvg.appendChild(blackLine)\n\t\t\t\t\t\tsvg.appendChild(coloredLine)\n\n\t\t\t\t\t\tsvg.style.position = \"absolute\"\n\t\t\t\t\t\tsvg.style.left = 0\n\t\t\t\t\t\tsvg.style.bottom = 0\n\t\t\t\t\t\tdocument.querySelector(\".board\").appendChild(svg)\n\t\t\t\t\t}\n\n\t\t\t\t\tif (button !== undefined) {\n\t\t\t\t\t\tbutton.classList.add(\"active\")\n\t\t\t\t\t\tif (index === 0) {\n\t\t\t\t\t\t\tbutton.style.borderColor = \"white\"\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbutton.style.backgroundColor = `hsl(${hue}, 50%, 80%)`\n\t\t\t\t\t\tbutton.style.color = \"black\"\n\t\t\t\t\t}\n\t\t\t\t\tawait pause(animationSpeedRef.current)\n\t\t\t\t}\n\t\t\t}\n\t\t\tcolorizeButtons()\n\t\t}\n\t}, [board])\n\treturn null\n}\n\nexport default Animation","/**\n Prototyped it in Node.js. Haven't adapted it properly to React yet.\n For the time being, it simply returns an array.\n It could surely be made to affect state, but would the number of state updates be too taxing?\n The unimplemented \"playback\" array includes a cell's valid moves. This would also be cool to visualize.\n */\n\nexport function Calculate(startX, startY, boardSize) {\n\tconst numberOfCells = boardSize ** 2\n\tconst board = [...Array(boardSize)].map((_, x) => [...Array(boardSize)].map((_, y) => Cell(x, y)))\n\tconst history = []\n\tconst playback = []\n\n\tboard[startX][startY].validMoves = board[startX][startY].getValidMoves()\n\tif (history.length === numberOfCells) {\n\t\treturn { history, playback }\n\t}\n\n\tfunction Cell(cellX, cellY) {\n\t\tlet validMoves = []\n\t\tconst rowName = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"[boardSize - cellY - 1]\n\t\tconst colName = cellX + 1\n\t\tconst name = `${rowName}${colName}`\n\n\t\tfunction getValidMoves(getValidMovesLength = true, rewind = false) {\n\t\t\tif (getValidMovesLength) {\n\t\t\t\tif (history.length > 0) {\n\t\t\t\t\tplayback.push({ ...history[history.length - 1], colorize: true })\n\t\t\t\t\tplayback.push(...validMoves)\n\t\t\t\t}\n\t\t\t\thistory.push(board[cellX][cellY])\n\t\t\t\thistory[history.length - 1].visited = true\n\t\t\t\tboard[cellX][cellY].visited = true\n\t\t\t}\n\n\t\t\tif (rewind) {\n\t\t\t\tvalidMoves.push(validMoves.shift())\n\t\t\t} else {\n\t\t\t\tvalidMoves = getValidCellsFromBoard()\n\t\t\t}\n\n\t\t\tif (getValidMovesLength && validMoves.length > 0) {\n\t\t\t\tfor (const move of validMoves) {\n\t\t\t\t\tmove.validMoves = move.getValidMoves(getValidMovesLength = false)\n\t\t\t\t}\n\t\t\t\tvalidMoves.sort((a, b) => a.validMoves.length - b.validMoves.length)\n\t\t\t\tconst next = validMoves[0]\n\t\t\t\tboard[next.x][next.y].getValidMoves()\n\t\t\t} else if (getValidMovesLength && validMoves.length === 0 && history.length < numberOfCells) {\n\t\t\t\tgoBackInHistory()\n\t\t\t}\n\n\t\t\treturn validMoves\n\t\t}\n\n\t\tfunction getValidCellsFromBoard() {\n\t\t\treturn board.flat().filter(otherCell => {\n\t\t\t\tconst xDistance = Math.abs(otherCell.x - cellX) * -1\n\t\t\t\tconst yDistance = Math.abs(otherCell.y - cellY) * -1\n\t\t\t\tconst moveIsValid =\n\t\t\t\t\t(xDistance === -2 && yDistance === -1)\n\t\t\t\t\t|| (xDistance === -1 && yDistance === -2)\n\t\t\t\treturn moveIsValid && !otherCell.visited\n\t\t\t})\n\t\t}\n\n\t\tfunction goBackInHistory() {\n\t\t\tfor (let i = history.length - 1; i >= 0; i--) {\n\t\t\t\tif (history[i].validMoves.length >= 2) {\n\t\t\t\t\tconst { x, y } = history[i]\n\t\t\t\t\tboard[x][y].getValidMoves(true, true)\n\t\t\t\t\tbreak\n\t\t\t\t} else {\n\t\t\t\t\thistory.pop()\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn {\n\t\t\tname,\n\t\t\tx: cellX,\n\t\t\ty: cellY,\n\t\t\tgetValidMoves,\n\t\t}\n\t}\n}","import styled from \"styled-components\"\nimport { Calculate } from \"../Calculate\"\n\nconst SingleCell = styled.button`\n\t\tborder: 1px solid;\n\t\tdisplay: inline;\n\t\t/* transition: all .25s ease-out; */\n\t\tborder-color: #666;\n\t\tbackground-color: #333;\n\t\tcolor: #ddd;\n\t\tcursor: pointer;\n\t\tfont-size: 0.75rem;\n\t\ttext-align: start;\n\t\tpadding-left: 0.5rem;\n\t\tpadding-right: -0.5rem;\n\t\t\n\t\t&:hover {\n\t\t\tbox-shadow: 0 0 10px white;\n\t\t}\n\n\t\t&.active:hover{\n\t\t\tbox-shadow: 0 0 10px black;\n\t\t}\n\t`\n\nfunction Cell({ name, x, y, setBoard, setHistory, boardSize }) {\n\tfunction disableAllButtonsAndCalculate() {\n\t\tdocument.querySelectorAll(\"button\").forEach(btn => btn.removeAttribute(\"style\"))\n\t\tconst { history, playback } = Calculate(x, y, boardSize)\n\t\tsetBoard(history)\n\t\tsetHistory(playback)\n\t}\n\n\treturn (\n\t\t<SingleCell\n\t\t\tclassName=\"board-button\"\n\t\t\tonClick={disableAllButtonsAndCalculate}\n\t\t>\n\t\t\t{name}\n\t\t</SingleCell>\n\t)\n}\n\nexport default Cell","import styled from \"styled-components\"\nimport Cell from \"./Cell\"\nimport { useEffect } from \"react\"\nimport { v4 as uuidv4 } from 'uuid'\n\nconst BoardContainer = styled.div`\n\tmargin-top: 1rem;\n\twidth: 100%;\n\theight: 100%;\n\tdisplay: flex;\n\tbackground: #333;\n\tcolor: #aaa;\t\t\n\n\thr {\n\t\tvisibility: hidden;\n\t}\n\n\t.row {\n\t\tdisplay: flex;\n\t\tflex-direction: column;\n\t\tjustify-content: space-evenly;\n\t\twidth: 100vw;\n\t}\n\n\tbutton {\n\t\tdisplay: inline-block;\n\t\theight: 100%;\n\t}\n`\nfunction Board({ boardSize, setBoard, setHistory }) {\n\tuseEffect(() => {\n\t\tdocument.querySelectorAll(\"svg\")\n\t\t\t.forEach(svg => svg.remove())\n\t\tdocument.querySelectorAll(\"button\")\n\t\t\t.forEach(btn => btn.removeAttribute(\"style\"))\n\t}, [boardSize])\n\n\tconst board = []\n\tfor (let y = 0; y < boardSize; y++) {\n\t\tconst row = []\n\t\tfor (let x = 0; x < boardSize; x++) {\n\t\t\tconst letter = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"[boardSize - x - 1]\n\t\t\trow.push(\n\t\t\t\t<Cell\n\t\t\t\t\tname={`${letter}${y + 1}`}\n\t\t\t\t\tx={y}\n\t\t\t\t\ty={x}\n\t\t\t\t\t{...{\n\t\t\t\t\t\tboardSize,\n\t\t\t\t\t\tsetBoard,\n\t\t\t\t\t\tsetHistory,\n\t\t\t\t\t}}\n\t\t\t\t\tkey={uuidv4()}\n\t\t\t\t/>\n\t\t\t)\n\t\t}\n\t\tboard.push(row)\n\t}\n\n\treturn (\n\t\t<BoardContainer className=\"board\" {...{ boardSize }}>\n\t\t\t{board.map(row => {\n\t\t\t\treturn (\n\t\t\t\t\t<div className=\"row\">\n\t\t\t\t\t\t{row.map(cell => cell)}\n\t\t\t\t\t</div>\n\t\t\t\t)\n\t\t\t})}\n\t\t</BoardContainer>\n\t)\n}\n\nexport { Board }","import styled from \"styled-components\"\nimport { useRef } from \"react\"\n\nconst Form = styled.form`\n\tdisplay: flex;\n\talign-items: flex-start;\n\tflex-wrap: wrap;\n\tjustify-content: center;\n\n\t@media (min-width: 728px) {\n\t\tflex-wrap: nowrap;\n\t}\n\n\tlabel {\n\t\tbackground-color: ${props => props.color};\n\t\tpadding: 1rem;\n\t\twidth: 100%;\n\t\tjustify-content: center;\n\t}\n\n\tbutton {\n\t\tpadding: 1rem;\n\t\tfont-size: 1rem;\n\t\tmargin: 1rem;\n\t\tmargin-bottom: 0;\n\t}\n\n\tp {\n\t\tmargin-top: 1rem;\n\t}\n`\nconst BoardSizeInput = styled.input`\n\tborder: 1px solid black;\n\tpadding: 0.5rem;\n`\nconst Slider = styled.input`\n\tmin-width: 33vw;\n\tdisplay: inline-block;\n`\nfunction Input({\n\tanimationSpeedRef,\n\tboardSize, setBoardSize,\n\tresetButton, setResetButton,\n\tsetBoard,\n}) {\n\tconst animationSpeedP = useRef(null)\n\n\tfunction reset(event) {\n\t\tevent.preventDefault()\n\t\tdocument.querySelectorAll(\"button\")\n\t\t\t.forEach(btn => btn.removeAttribute(\"style\"))\n\t\tdocument.querySelectorAll(\"svg\").forEach(svg => svg.remove())\n\t\tsetBoard([])\n\t\tsetResetButton(!resetButton)\n\t}\n\n\tfunction boardSizeAndSpeed(event, size, speed) {\n\t\tevent.preventDefault()\n\t\tsetBoardSize(size)\n\t\tanimationSpeedRef.current = speed\n\t}\n\n\tfunction createButtons(event) {\n\t\tif (event.target.value <= 26) {\n\t\t\tconst n = Number(event.target.value)\n\t\t\tsetBoardSize(n)\n\t\t}\n\t}\n\n\tfunction getTimeString(totalMilliseconds) {\n\t\tconst numberOfCells = boardSize ** 2\n\t\tconst totalSeconds = totalMilliseconds * numberOfCells / 1000\n\t\tconst minutes = Math.floor(totalSeconds / 60)\n\t\tconst seconds = Math.floor(totalSeconds % 60)\n\n\t\tlet output = \"\"\n\t\tif (totalSeconds > 60) {\n\t\t\toutput = `${minutes}:${String(seconds).padStart(2, \"0\")}` // 1:01\n\t\t} else if (totalSeconds >= 10) {\n\t\t\toutput = Math.round(totalSeconds) + \"s\" // 10s\n\t\t} else {\n\t\t\toutput = totalSeconds.toFixed(1) + \"s\" // 9.9s\n\t\t}\n\n\t\treturn output\n\t}\n\n\tfunction updateAnimationSpeed(event) {\n\t\tanimationSpeedRef.current = Number(event.target.value) || animationSpeedRef.current\n\t\tconst output = getTimeString(animationSpeedRef.current)\n\t\tanimationSpeedP.current.innerHTML = `Interval: ${animationSpeedRef.current} ms (total duration: ${output})`\n\t}\n\n\treturn (\n\t\t<Form>\n\t\t\t<label htmlFor=\"num-cells\" >\n\t\t\t\t<BoardSizeInput\n\t\t\t\t\tautoFocus\n\t\t\t\t\tid=\"num-cells\"\n\t\t\t\t\tmin=\"5\" // There are no solutions for n < 5\n\t\t\t\t\tmax=\"26\" // Sticking to the English alphabet\n\t\t\t\t\tname=\"num-cells\"\n\t\t\t\t\tonChange={createButtons}\n\t\t\t\t\tonClick={e => e.target.focus()}\n\t\t\t\t\ttype=\"number\"\n\t\t\t\t\tvalue={boardSize}\n\t\t\t\t/>\n\t\t\t\t<p>Board size (5-26)</p>\n\t\t\t\t<button onClick={e => boardSizeAndSpeed(e, 8, 50)}>8x8</button>\n\t\t\t\t<button onClick={e => boardSizeAndSpeed(e, 26, 250)}>26x26</button>\n\t\t\t\t<button onClick={reset}>Clear</button>\n\t\t\t</label>\n\n\n\t\t\t<label htmlFor=\"speed\">\n\t\t\t\t<Slider\n\t\t\t\t\ttype=\"range\"\n\t\t\t\t\tname=\"animation-speed\"\n\t\t\t\t\tonInput={updateAnimationSpeed}\n\t\t\t\t\tmin=\"0\"\n\t\t\t\t\tmax=\"500\"\n\t\t\t\t\tstep=\"5\"\n\t\t\t\t/>\n\t\t\t\t<p ref={animationSpeedP}>{`Interval: ${animationSpeedRef.current} ms (total duration: ${getTimeString(animationSpeedRef.current)})`}</p>\n\t\t\t</label>\n\t\t</Form>\n\t)\n}\n\nexport default Input","import styled from \"styled-components\"\nimport { NavLink } from \"react-router-dom\"\n\nconst Nav = styled.nav`\n\tdisplay: flex;\n\tjustify-content: space-between;\n\tpadding: 1rem;\n\tbackground: hsl(350, 50%, 50%);\n\tcolor: white;\n\tbox-shadow: 0 0 10px 0 rgba(0,0,0,0.5);\n\tborder-bottom: 1px solid black;\n\n\tul{\n\t\tdisplay: flex;\n\t\tflex-direction: column;\n\t\tlist-style: none;\n\t}\n\n\t@media (min-width: 768px) {\n\t\tul {\n\t\t\tflex-direction: row;\n\t\t}\n\t}\n\n\tli {\n\t\tpadding: 0 5rem;\n\t\tcursor: pointer;\n\t\tcolor: white;\n\t\ttext-decoration: none;\n\t}\n`\n\nfunction Menu({ title }) {\n\treturn (\n\n\t\t<Nav>\n\t\t\t<h1>Knight's Tour</h1>\n\t\t\t<ul>\n\t\t\t\t<NavLink exact to=\"/knights-tour-react\"><li>Board</li></NavLink>\n\t\t\t\t<NavLink to=\"/knights-tour-react/about\"><li>About</li></NavLink>\n\t\t\t</ul>\n\t\t</Nav>\n\n\t)\n}\n\nexport default Menu","import About from \"./components/About\"\nimport Animation from \"./components/Animation\"\nimport { Board } from \"./components/Board\"\nimport Input from \"./components/Input\"\nimport Menu from \"./components/Nav\"\n\nimport { useState, useRef } from \"react\"\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\"\nimport \"./App.css\"\n\nfunction App() {\n\tconst animationSpeedRef = useRef(50)\n\tconst [board, setBoard] = useState([])\n\tconst [boardSize, setBoardSize] = useState(8)\n\tconst [history, setHistory] = useState([])\n\tconst [resetButton, setResetButton] = useState(false)\n\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<Router>\n\t\t\t\t<Menu />\n\t\t\t\t<Animation {...{ animationSpeedRef, board, resetButton }} />\n\t\t\t\t<Input {...{\n\t\t\t\t\tanimationSpeedRef,\n\t\t\t\t\tboardSize, setBoardSize,\n\t\t\t\t\tresetButton, setResetButton,\n\t\t\t\t\tsetBoard,\n\t\t\t\t}} />\n\t\t\t\t<Board {...{ boardSize, setBoard, history, setHistory }} />\n\t\t\t</Router>\n\t\t</div>\n\t)\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}